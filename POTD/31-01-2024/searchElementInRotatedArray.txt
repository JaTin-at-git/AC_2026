//https://leetcode.com/problems/search-in-rotated-sorted-array/description/
//time: 2log(n)
//space: 1


class GFG {
    public static int search(int[] nums, int target) {
        int l = 0;
        int h = nums.length - 1;
        while (l <= h) {
            int mid = (h + l) / 2;
            if (nums[mid] >= nums[0]) l = mid + 1;
            else h = mid - 1;
        }

        if (l < nums.length && target < nums[0]) h = nums.length - 1;
        else l = 0;

        while (l <= h) {
            int mid = (h + l) / 2;
            if (nums[mid] < target) l = mid + 1;
            else h = mid - 1;
        }

        return l < nums.length && nums[l] == target ? l : -1;
    }

    public static void main(String[] args) {
        System.out.println(search(new int[]{1, 3, 5}, 3));
    }

}
