//https://leetcode.com/problems/koko-eating-bananas/
//time: n + n.logn
//space: 1


public class GfG {

    private static int check(int arr[], int k, int h) {
        int count = 0;
        for (int i = 0; i < arr.length; i++) {
            count += Math.ceilDiv(arr[i],k);
            if (count > h) return count;
        }
        return count;
    }

    public static int minEatingSpeed(int[] arr, int reqH) {
        int l = 1;
        int h = Integer.MIN_VALUE;

        for (int el : arr) h = Math.max(h, el);

        while (l <= h) {
            int mid = (h - l) / 2 + l;
            int check = check(arr, mid, reqH);
            if (check > reqH) l = mid + 1;
            else h = mid - 1;
        }

        return l;
    }

    public static void main(String[] args) {
        int arr[] = {30,11,23,4,20 };
        System.out.println(minEatingSpeed(arr, 5));
    }
}