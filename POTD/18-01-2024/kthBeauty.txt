//https://leetcode.com/problems/find-the-k-beauty-of-a-number/description/
//time: O(n)
//space: O(1)

public class GfG {

    public static int divisorSubstrings(int num, int k) {
        final int dividend = num;
        int divisor = 0;
        int pow = 1;
        for (int i = 0; i < k; i++) {
            divisor += pow * (num % 10);
            num /= 10;
            pow *= 10;
        }

        pow /= 10;

        int count = 0;
        if (divisor != 0)
            count = dividend % divisor == 0 ? 1 : 0;

        while (num > 0) {
            divisor /= 10;
            divisor += pow * (num % 10);
            num /= 10;
            System.out.println(divisor);
            if (divisor == 0) continue;
            count += dividend % divisor == 0 ? 1 : 0;
        }

        return count;
    }

    public static void main(String[] args) {
        System.out.println(divisorSubstrings((int) 11111111, 8));
    }

}