//time: 2^n
//space: 2^n (Stack)
//https://leetcode.com/problems/subsets/?envType=list&envId=o7km4wrg

class Solution {
    List<List<Integer>> res;
    int[] nums;

    private void helper(int index, ArrayList<Integer> pre){
        if(index>=nums.length){
            res.add(new ArrayList<>(pre));
            return;
        }

        helper(index+1, pre);
        pre.add(nums[index]);
        helper(index+1, pre);
        pre.remove(pre.size()-1);
    }

    public List<List<Integer>> subsets(int[] nums) {
        List<List<Integer>> res = new ArrayList<List<Integer>>();
        this.res = res;
        this.nums = nums;

        helper(0, new ArrayList<Integer>());

        return res;
    }
}