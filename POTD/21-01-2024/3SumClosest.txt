//https://leetcode.com/problems/3sum-closest/description/
//time: O(n^2)
//space: O(1)


import java.util.Arrays;

public class GfG {

    public static int threeSumClosest(int[] arr, int target) {
        Arrays.sort(arr); //nlogn
        int ans = Integer.MAX_VALUE;
        for (int d = 0; d < arr.length - 2; d++) { //n^2
            int i = d + 1;
            int j = arr.length - 1;
            while (i < j) {
                int sum = arr[d] + arr[i] + arr[j];
                if (sum == target) return sum;
                else {
                    if (Math.abs(target - ans) > Math.abs(target - sum)) ans = sum;
                    if (sum > target) j--;
                    else i++;
                }
            }
        }
        System.gc(); //just spamming :)
        return ans;
    }

    public static void main(String[] args) {
        int arr[] = {-4, -1, -1, -2};
        Arrays.sort(arr);
        System.out.println(threeSumClosest(arr, 1));
    }

}