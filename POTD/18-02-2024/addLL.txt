//https://leetcode.com/problems/add-two-numbers-ii/
//time: n+m + 2.max(n,m)
//space: 1

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    private ListNode reverse(ListNode head){
        ListNode prev = null;
        ListNode current = head;

        while(current!=null){
            ListNode temp = current.next;
            current.next = prev;
            prev = current;
            current = temp;
        }

        return prev;
    }

    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {

        l1 = reverse(l1);
        l2 = reverse(l2);

        int sum = l1.val+l2.val;
        int carry = sum/10;
        ListNode res = new ListNode(sum%10);
        ListNode adder = res;
        l1=l1.next;
        l2=l2.next;
        
        while(l1!=null || l2!=null){
            sum=carry;
            if(l1!=null) {
                sum+=l1.val;
                l1 = l1.next;
            }
            if(l2!=null) {
                sum+=l2.val;
                l2 = l2.next;
            }
            adder.next = new ListNode(sum%10);
            carry = sum/10;
            adder = adder.next;
        }

        if(carry!=0) adder.next = new ListNode(carry);

        return reverse(res);
    }
} 